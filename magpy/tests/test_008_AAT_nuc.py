import psi4
import magpy
import pytest
from ..data.molecules import *
import numpy as np
import os
from ..utils import AAT_nuc

np.set_printoptions(precision=15, linewidth=200, threshold=200, suppress=True)

def test_AAT_nuc():

    psi4.set_memory('2 GB')
    psi4.set_output_file('output.dat', False)

    ## Hydrogen Peroxide
    mol = psi4.geometry("""
O       0.0000000000        1.3192641900       -0.0952542913
O      -0.0000000000       -1.3192641900       -0.0952542913
H       1.6464858700        1.6841036400        0.7620343300
H      -1.6464858700       -1.6841036400        0.7620343300
symmetry c1
units bohr
noreorient
no_com
""")

    geom, mass, elem, Z, uniq = mol.to_arrays()
    AAT = AAT_nuc(geom, Z)
    print(AAT)
    AAT_ref = np.array([ # Matches Dalton 
    [     0.00000000000000,    -0.19050858260000,    -2.63852838000000],
    [     0.19050858260000,     0.00000000000000,     0.00000000000000],
    [     2.63852838000000,     0.00000000000000,     0.00000000000000],
    [     0.00000000000000,    -0.19050858260000,     2.63852838000000],
    [     0.19050858260000,     0.00000000000000,     0.00000000000000],
    [    -2.63852838000000,     0.00000000000000,     0.00000000000000],
    [     0.00000000000000,     0.19050858250000,    -0.42102591000000],
    [    -0.19050858250000,     0.00000000000000,     0.41162146750000],
    [     0.42102591000000,    -0.41162146750000,     0.00000000000000],
    [     0.00000000000000,     0.19050858250000,     0.42102591000000],
    [    -0.19050858250000,     0.00000000000000,    -0.41162146750000],
    [    -0.42102591000000,     0.41162146750000,     0.00000000000000],
    ])

    assert(np.max(np.abs(AAT-AAT_ref)) < 1e-11)

    ## Ethylene Oxide
    mol = psi4.geometry("""
O       0.0000000000        0.0000000000        1.6119363900
C       0.0000000000       -1.3813890400       -0.7062143040
C       0.0000000000        1.3813905700       -0.7062514120
H      -1.7489765900       -2.3794725300       -1.1019539000
H       1.7489765900       -2.3794725300       -1.1019539000
H       1.7489765900        2.3794634300       -1.1020178200
H      -1.7489765900        2.3794634300       -1.1020178200
symmetry c1
no_reorient
no_com
units bohr
            """)

    geom, mass, elem, Z, uniq = mol.to_arrays()
    AAT = AAT_nuc(geom, Z)
    print(AAT)
    AAT_ref = np.array([ # Matches Dalton
    [     0.00000000000000,    25.91870296124846,     0.00000000000000],
    [   -25.91870296124846,     0.00000000000000,     0.00000000000000],
    [     0.00000000000000,     0.00000000000000,     0.00000000000000],
    [     0.00000000000000,    -8.51653896793695,    16.65875857003459],
    [     8.51653896793695,     0.00000000000000,     0.00000000000000],
    [   -16.65875857003459,     0.00000000000000,     0.00000000000000],
    [     0.00000000000000,    -8.51698646910796,   -16.65877702095601],
    [     8.51698646910796,     0.00000000000000,     0.00000000000000],
    [    16.65877702095601,     0.00000000000000,     0.00000000000000],
    [     0.00000000000000,    -2.21482187419701,     4.78251205290430],
    [     2.21482187419701,     0.00000000000000,    -3.51527555643707],
    [    -4.78251205290430,     3.51527555643707,     0.00000000000000],
    [     0.00000000000000,    -2.21482187419701,     4.78251205290430],
    [     2.21482187419701,     0.00000000000000,     3.51527555643707],
    [    -4.78251205290430,    -3.51527555643707,     0.00000000000000],
    [     0.00000000000000,    -2.21495034727941,    -4.78249376277523],
    [     2.21495034727941,     0.00000000000000,     3.51527555643707],
    [     4.78249376277523,    -3.51527555643707,     0.00000000000000],
    [     0.00000000000000,    -2.21495034727941,    -4.78249376277523],
    [     2.21495034727941,     0.00000000000000,    -3.51527555643707],
    [     4.78249376277523,     3.51527555643707,     0.00000000000000],
    ])

    assert(np.max(np.abs(AAT-AAT_ref)) < 1e-11)
