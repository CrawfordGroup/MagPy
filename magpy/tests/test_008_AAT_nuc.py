import psi4
import magpy
import pytest
from ..data.molecules import *
import numpy as np
import os

np.set_printoptions(precision=15, linewidth=200, threshold=200, suppress=True)

def test_AAT_nuc():

    psi4.set_memory('2 GB')
    psi4.set_output_file('output.dat', False)

    ## Hydrogen Peroxide
    mol = psi4.geometry("""
O       0.0000000000        1.3192641900       -0.0952542913
O      -0.0000000000       -1.3192641900       -0.0952542913
H       1.6464858700        1.6841036400        0.7620343300
H      -1.6464858700       -1.6841036400        0.7620343300
symmetry c1
units bohr
noreorient
no_com
""")

    AAT = magpy.AAT(mol)
    I_nuc = AAT.nuclear()
    print(I_nuc)

    AAT_ref = np.array([ # Matches Dalton 
    [     0.00000000000000,    -0.19050858260000,    -2.63852838000000],
    [     0.19050858260000,     0.00000000000000,     0.00000000000000],
    [     2.63852838000000,     0.00000000000000,     0.00000000000000],
    [     0.00000000000000,    -0.19050858260000,     2.63852838000000],
    [     0.19050858260000,     0.00000000000000,     0.00000000000000],
    [    -2.63852838000000,     0.00000000000000,     0.00000000000000],
    [     0.00000000000000,     0.19050858250000,    -0.42102591000000],
    [    -0.19050858250000,     0.00000000000000,     0.41162146750000],
    [     0.42102591000000,    -0.41162146750000,     0.00000000000000],
    [     0.00000000000000,     0.19050858250000,     0.42102591000000],
    [    -0.19050858250000,     0.00000000000000,    -0.41162146750000],
    [    -0.42102591000000,     0.41162146750000,     0.00000000000000],
    ])

    assert(np.max(np.abs(I_nuc-AAT_ref)) < 1e-11)

    ## Ethylene Oxide
    mol = psi4.geometry("""
O       0.0000000000        0.0000000000        1.6119363900
C       0.0000000000       -1.3813890400       -0.7062143040
C       0.0000000000        1.3813905700       -0.7062514120
H      -1.7489765900       -2.3794725300       -1.1019539000
H       1.7489765900       -2.3794725300       -1.1019539000
H       1.7489765900        2.3794634300       -1.1020178200
H      -1.7489765900        2.3794634300       -1.1020178200
symmetry c1
no_reorient
no_com
units bohr
            """)

    AAT = magpy.AAT(mol)
    I_nuc = AAT.nuclear()
    print(I_nuc)

    AAT_ref = np.array([ # Matches Dalton
    [  0.00000000,     3.22387278,    -0.00000000],
    [ -3.22387278,     0.00000000,     0.00000000],
    [  0.00000000,    -0.00000000,     0.00000000],
    [  0.00000000,    -1.05932146,     2.07208356],
    [  1.05932146,     0.00000000,     0.00000000],
    [ -2.07208356,    -0.00000000,     0.00000000],
    [  0.00000000,    -1.05937712,    -2.07208586],
    [  1.05937712,     0.00000000,     0.00000000],
    [  2.07208586,    -0.00000000,     0.00000000],
    [  0.00000000,    -0.27548848,     0.59486813],
    [  0.27548848,     0.00000000,    -0.43724415],
    [ -0.59486813,     0.43724415,     0.00000000],
    [  0.00000000,    -0.27548848,     0.59486813],
    [  0.27548848,     0.00000000,     0.43724415],
    [ -0.59486813,    -0.43724415,     0.00000000],
    [  0.00000000,    -0.27550445,    -0.59486586],
    [  0.27550445,     0.00000000,     0.43724415],
    [  0.59486586,    -0.43724415,     0.00000000],
    [  0.00000000,    -0.27550445,    -0.59486586],
    [  0.27550445,     0.00000000,    -0.43724415],
    [  0.59486586,     0.43724415,     0.00000000],
    ])

    assert(np.max(np.abs(I_nuc-AAT_ref)) < 1e-8)
